allprojects {
    apply plugin: 'java'
}

final def errorProneVersion = "2.3.1"
final def errorProneJavacVersion = "9+181-r4173-1"

wrapper.gradleVersion = '4.10.2'

buildscript {
    final def errorPronePluginVersion = "0.6"
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }

    }
    dependencies {
        classpath "net.ltgt.gradle:gradle-errorprone-plugin:$errorPronePluginVersion"
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'net.ltgt.errorprone'

    group 'org.javaclasses.todo'
    version '1.5'

    sourceCompatibility = 1.8

    test {
        useJUnitPlatform()
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        testCompile group: 'com.google.guava', name: 'guava-testlib', version: '26.0-jre'

        testCompile 'org.junit.jupiter:junit-jupiter-api:5.3.1'
        testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.3.1'

        compile 'org.slf4j:slf4j-api:1.7.25'
        compile 'org.slf4j:slf4j-simple:1.7.25'
        compile 'com.google.guava:guava:26.0-jre'

        errorprone("com.google.errorprone:error_prone_core:$errorProneVersion")
        errorproneJavac("com.google.errorprone:javac:$errorProneJavacVersion")
    }

    tasks.withType(JavaCompile) {
        options.errorprone.errorproneArgs << "-XepExcludedPaths:.*/generated/.*" << "-Xep:ClassCanBeStatic:OFF"
    }
}

task rollup(type: Exec) {
    final String osName = System.getProperty("os.name").toLowerCase()
    final String rollupCommand = 'npm run rollup'

    if (osName.contains("windows")) {
        commandLine 'cmd', '/c', rollupCommand
    } else {
        commandLine 'npm', 'run', 'rollup'
    }
}

task copyStaticFiles(type: Copy) {
    from "js/public"
    into "web/src/main/resources/public"
}


task cleanUp(type: Delete) {
    doFirst {
        delete 'build/jar'
        delete 'web/src/main/resources/public'
    }
}

rollup.dependsOn(copyStaticFiles)
build.dependsOn(rollup)
clean.dependsOn(cleanUp)
